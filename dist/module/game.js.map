{"version":3,"sources":["../../game.js"],"names":["produce","JSON_delta","deepcopy","context","Symbol","Game","setupFilters","state","filters","getFilters","f","default","filterMode","filterKey","filter","playAction","action","undefined","Error","views","newState","oldContext","mode","diffs","draft","updateState","process","env","NODE_ENV","replayResult","replayAction","filteredNewState","diff","length","error","result","replay","newInfo","newInfos","diffIndex","applyUpdate","transform","_playApplyUpdate","_replayApplyUpdate","original","updatedViews","push","_transform","patch"],"mappings":"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","sourcesContent":["import produce from \"immer\";\r\nimport { JSON_delta } from \"./vendor-json-delta\";\r\n\r\nimport deepcopy from \"deepcopy\";\r\n\r\nconst context = Symbol(\"context\");\r\n\r\nclass Game {\r\n  static setupFilters(state) {\r\n    const filters = this.getFilters(state);\r\n    let f;\r\n    if (typeof filters == \"function\") {\r\n      f = { default: filters };\r\n      this[context].filterMode = \"single\";\r\n    } else {\r\n      f = filters;\r\n      this[context].filterMode = \"multi\";\r\n    }\r\n    this[context].filters = {};\r\n    for (let filterKey in f) {\r\n      this[context].filters[filterKey] = produce(f[filterKey]);\r\n    }\r\n  }\r\n\r\n  static filter(state, filterKey) {\r\n    const filters = this.getFilters(state);\r\n    if (typeof filters == \"function\") {\r\n      return produce(state, filters);\r\n    } else {\r\n      return produce(state, filters[filterKey]);\r\n    }\r\n  }\r\n\r\n  static getFilters() {\r\n    // default implementation if not overridden\r\n    return () => {};\r\n  }\r\n\r\n  static playAction(state, action) {\r\n    if (this[context] !== undefined) {\r\n      throw new Error(\r\n        \"Nested calls to playAction()/replayAction() are not supported\"\r\n      );\r\n    }\r\n    let views = {},\r\n      newState,\r\n      oldContext;\r\n    try {\r\n      this[context] = { mode: \"play\", diffs: {} };\r\n      this.setupFilters(state);\r\n      for (let filterKey in this[context].filters) {\r\n        views[filterKey] = this[context].filters[filterKey](state);\r\n        this[context].diffs[filterKey] = [];\r\n      }\r\n      newState = produce(state, draft => {\r\n        return this.updateState(draft, action);\r\n      });\r\n    } finally {\r\n      oldContext = this[context];\r\n      this[context] = undefined;\r\n    }\r\n    if (process.env.NODE_ENV != \"production\") {\r\n      // development or test\r\n      for (let filterKey in oldContext.filters) {\r\n        const replayResult = this.replayAction(\r\n          views[filterKey],\r\n          action,\r\n          oldContext.diffs[filterKey]\r\n        );\r\n        const filteredNewState = oldContext.filters[filterKey](newState);\r\n        const diff = JSON_delta.diff(replayResult, filteredNewState);\r\n        if (diff.length != 0) {\r\n          const error = new Error(\r\n            \"Result of replaying the action did not match the new state\"\r\n          );\r\n          error.result = filteredNewState;\r\n          error.replay = replayResult;\r\n          error.diff = diff;\r\n          throw error;\r\n        }\r\n      }\r\n    }\r\n    if (oldContext.filterMode == \"single\") {\r\n      const newInfo = oldContext.diffs[\"default\"];\r\n      return { state: newState, newInfo };\r\n    } else {\r\n      return { state: newState, newInfos: oldContext.diffs };\r\n    }\r\n  }\r\n\r\n  static replayAction(state, action, diffs) {\r\n    if (this[context] !== undefined) {\r\n      throw new Error(\r\n        \"Nested calls to playAction()/replayAction() are not supported\"\r\n      );\r\n    }\r\n    let result;\r\n    try {\r\n      this[context] = { mode: \"replay\", diffs, diffIndex: 0 };\r\n      result = produce(state, draft => {\r\n        return this.updateState(draft, action);\r\n      });\r\n    } finally {\r\n      this[context] = undefined;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  static applyUpdate(state, transform) {\r\n    switch (this[context].mode) {\r\n      case \"play\":\r\n        this._playApplyUpdate(state, transform);\r\n        break;\r\n      case \"replay\":\r\n        this._replayApplyUpdate(state, transform);\r\n        break;\r\n    }\r\n  }\r\n\r\n  static _playApplyUpdate(draft, transform) {\r\n    // Have to clone the previous state here as Immer will try to help out with\r\n    // structural sharing which breaks because this is really a mutable draft\r\n    const original = deepcopy(draft);\r\n    const views = {};\r\n    for (let filterKey in this[context].filters) {\r\n      views[filterKey] = produce(original, this[context].filters[filterKey]);\r\n    }\r\n    transform(draft);\r\n    const updatedViews = {};\r\n    for (let filterKey in this[context].filters) {\r\n      updatedViews[filterKey] = produce(\r\n        draft,\r\n        this[context].filters[filterKey]\r\n      );\r\n      // We deepcopy the diff here to ensure that it contains references\r\n      // only to plain objects and not proxies\r\n      const diff = deepcopy(\r\n        JSON_delta.diff(views[filterKey], updatedViews[filterKey])\r\n      );\r\n      this[context].diffs[filterKey].push(diff);\r\n    }\r\n  }\r\n\r\n  static _replayApplyUpdate(state, _transform) {\r\n    // We also have to clone the diff we are applying, because otherwise\r\n    // modifying the state later on can also modify the original diff!\r\n    const diff = deepcopy(this[context].diffs[this[context].diffIndex]);\r\n    JSON_delta.patch(state, diff);\r\n    this[context].diffIndex++;\r\n  }\r\n}\r\n\r\nexport default Game;\r\n"],"file":"game.js"}